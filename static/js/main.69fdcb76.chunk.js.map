{"version":3,"sources":["panels/Home.js","panels/Intro.js","App.js","index.js"],"names":["Home","id","fetchedUser","go","counter","title","before","photo_200","src","description","city","first_name","last_name","Intro","userSeeIntro","centered","className","vertical","mode","size","onClick","ROUTES","STORAGE_KEYS","STATUS","App","useState","activePanel","setActivePanel","popout","setCounter","useEffect","bridge","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","timer","setInterval","clearInterval","panel","viewIntro","a","send","key","JSON","stringify","hasSeen","console","log","ReactDOM","render","getElementById"],"mappings":"spBA0CeA,EAhCF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAQC,GAAX,EAAOC,GAAP,EAAWD,aAAYE,EAAvB,EAAuBA,QAAvB,OACZ,kBAAC,IAAD,CAAOH,GAAIA,GACV,kBAAC,IAAD,qEACCC,GACD,kBAAC,IAAD,CAAOG,MAAM,oCACZ,kBAAC,IAAD,CACCC,OAAQJ,EAAYK,UAAY,kBAAC,IAAD,CAAQC,IAAKN,EAAYK,YAAe,KACxEE,YAAaP,EAAYQ,MAAQR,EAAYQ,KAAKL,MAAQH,EAAYQ,KAAKL,MAAQ,IAFpF,UAIKH,EAAYS,WAJjB,YAI+BT,EAAYU,WAJ3C,cAMaR,M,oDC8BDS,G,OA/BD,SAAC,GAAsC,IAArCZ,EAAoC,EAApCA,GAAGC,EAAiC,EAAjCA,YAAYY,EAAqB,EAArBA,aAAaX,EAAQ,EAARA,GAC3C,OACC,kBAAC,IAAD,CAAOF,GAAIA,EAAIc,UAAW,GAC1B,kBAAC,IAAD,uEAGGD,GAAgBZ,GACjB,kBAAC,WAAD,KACA,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAKc,UAAW,QACdd,EAAYK,WAAa,kBAAC,IAAD,CAAQC,IAAKN,EAAYK,WAAzB,KAC1B,qEAAaL,EAAYS,WAAzB,KACA,mtCAKF,kBAAC,IAAD,CAAaM,SAAW,UACvB,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAQC,KAAK,WAAWC,KAAK,KAAKC,QAASjB,GAA3C,8HC5BAkB,EACC,OADDA,EAEE,QAGFC,EAAe,CACpBC,OAAS,UAkFKC,EA9EH,WAAO,IAAD,EACqBC,mBAASJ,GAD9B,mBACVK,EADU,KACGC,EADH,OAEcF,mBAAS,MAFvB,mBAEVvB,EAFU,aAGWuB,mBAAS,kBAAC,IAAD,CAAeN,KAAK,YAHxC,mBAGVS,EAHU,aAIuBH,oBAAS,IAJhC,mBAIVX,EAJU,aAKgBW,mBAAS,KALzB,mBAKPrB,EALO,KAKEyB,EALF,KAOjBC,qBAAU,WACTC,IAAOC,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACnC,GAAa,yBAATD,EAAiC,CACpC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OAIlC,IAAMQ,EACFxC,EAAU,GAAKyC,aAAY,kBAAMhB,EAAWzB,EAAU,KAAI,KAC9D,OAAO,kBAAM0C,cAAcF,MAiC/B,CAACxC,IAEJ,IAAMD,EAAK,SAAA4C,GACVpB,EAAeoB,IAEVC,EAAS,uCAAG,sBAAAC,EAAA,+EAEVlB,IAAOmB,KAAM,qBAAqB,CACvCC,IAAI7B,EAAaC,OACjBgB,MAAOa,KAAKC,UAAU,CACrBC,SAAS,MALK,OAQhBnD,EAAGkB,GARa,+CAUhBkC,QAAQC,IAAR,MAVgB,wDAAH,qDAcf,OACC,kBAAC,IAAD,CAAM9B,YAAaA,EAAaE,OAAQA,GACvC,kBAAC,EAAD,CAAM3B,GAAIoB,EAAanB,YAAaA,EAAaC,GAAIA,IACrD,kBAAC,EAAD,CAAOF,GAAIoB,EAAcnB,YAAaA,EAAaC,GAAI6C,EAAYlC,aAAcA,EAAcV,QAASA,MCtF3G2B,IAAOmB,KAAK,gBAEZO,IAASC,OAAO,kBAAC,EAAD,MAASrB,SAASsB,eAAe,W","file":"static/js/main.69fdcb76.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\n\nconst Home = ({ id, go, fetchedUser,counter }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>ВиктоИрина</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Bridge\">\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\n\t\t\t\tCountdown: {counter}\n\t\t\t</Cell>\n\t\t</Group>}\n\n\t\t\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React, {Fragment} from 'react';\nimport PropTypes from 'prop-types';\n\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport FixedLayout from '@vkontakte/vkui/dist/components/FixedLayout/FixedLayout';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\n\n\n\n\n\n\nimport './Intro.css';\n\n\n\nconst Intro = ({id,fetchedUser,userSeeIntro,go}) => {\n\treturn (\n\t\t<Panel id={id} centered ={true}>\n\t\t<PanelHeader>\n\t\t\tДайте денек\n\t\t</PanelHeader>\n\t\t{(!userSeeIntro && fetchedUser) && \n\t\t  <Fragment> \n\t\t\t\t<Group>\n\t\t\t\t\t<Div className ='User' >\n\t\t\t\t\t\t{fetchedUser.photo_200 && <Avatar src={fetchedUser.photo_200}> </Avatar>}\n\t\t\t\t\t\t<h2>Привет, {fetchedUser.first_name}!</h2>\n\t\t\t\t\t\t<h3>Здесь ты можешь заработать деньги своими знаниями отвечая на вопросы викторины. Для участия в викторине нужно закинуть 50 рублей. Ответив на три вопроса, вы получаете выигрыш в размере (количество участников*50)/(количество победителей)</h3>\n\t\t\t\t\t</Div>\n\t\t\t\t</Group>\n\t\t  \n\n\t\t  <FixedLayout vertical = 'bottom' >\n\t\t  \t<Div>\n\t\t  \t\t<Button mode='commerce' size='xl' onClick={go}>\n\t\t  \t\t\tБазара зира начальник\n\t\t  \t\t</Button>\n\t\t  \t</Div>\n\t\t  </FixedLayout>\n\t\t  </Fragment>\n\t\t}\n\t</Panel>)\n};\n\n\n\nexport default Intro;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\n\n\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Intro from './panels/Intro';\n\nconst ROUTES = {\n\tHOME: 'home',\n\tINTRO: 'intro',\n}\n\nconst STORAGE_KEYS = {\n\tSTATUS : 'status',\n}\n\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState(ROUTES.INTRO);\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\tconst [userSeeIntro, setUserSeeIntro] = useState(false);\n    const [counter, setCounter] = useState(60);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\n\t\t});\n        const timer =\n            counter > 0 && setInterval(() => setCounter(counter - 1), 1000);\n        return () => clearInterval(timer);\n\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tconst storageData = await bridge.send('VKWebAppStorageGet',{\n\t\t\t\tkeys: Object.values(STORAGE_KEYS)\n\t\t\t});\n\t\t\tconsole.log(storageData);\n\t\t\tconst data = {};\n\t\t\tstorageData.keys.forEach(({key,value}) =>{\n\t\t\t\ttry {\n\t\t\t\t\tdata[key] = value ? JSON.parse(value) :{};\n\t\t\t\t\tswitch (key) {\n\t\t\t\t\t\tcase STORAGE_KEYS.STATUS:\n\t\t\t\t\t\t\tif (data[key].hasSeen){\n\t\t\t\t\t\t\t\tsetActivePanel(ROUTES.HOME);\n\t\t\t\t\t\t\t\tsetUserSeeIntro(true)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// statements_def\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\tcatch(error){\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t}\n\t\t\t} );\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, [counter]);\n\n\tconst go = panel => {\n\t\tsetActivePanel(panel);\n\t};\n\tconst viewIntro = async function (){\n\t\ttry{\n\t\t\tawait bridge.send ('VKWebAppStorageSet',{\n\t\t\t\tkey:STORAGE_KEYS.STATUS,\n\t\t\t\tvalue: JSON.stringify({\n\t\t\t\t\thasSeen: true\n\t\t\t\t})\n\t\t\t});\n\t\t\tgo(ROUTES.HOME)\n\t\t} catch(error){\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id={ROUTES.HOME} fetchedUser={fetchedUser} go={go} />\n\t\t\t<Intro id={ROUTES.INTRO} fetchedUser={fetchedUser} go={viewIntro}  userSeeIntro={userSeeIntro} counter={counter}/>\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}